# You must use a tab-size of 4 spaces to edit this file.
---
full_slot:
    css_class: zenario_slotOuter zenario_slotWithContents
    info:
        slot_name:
            css_class: zenario_slotControl_slotName
            page_modes:
                edit: true
                layout: true
        grid_width:
            css_class: zenario_slotControl_width
            page_modes:
                edit: true
                layout: true
            label: 'Width: <span></span>'
        grid_css_class:
            css_class: zenario_slotControl_cssClass
            page_modes:
                edit: true
                layout: true
            label: 'CSS classes: <span></span>'
        module_name:
            css_class: '' #zenario_slotControl_wireframe or zenario_slotControl_reusable
            page_modes:
                edit: true
                layout: true
        reusable_plugin_details:
            css_class: zenario_slotControl_reusablePluginDetails
            page_modes:
                edit: true
                layout: true
        slot_css_class:
            css_class: zenario_slotControl_cssClass
            page_modes:
                edit: true
                layout: true
    notes:
        author_advice:
            css_class: zenario_slotControl_authorAdvice
            page_modes:
                edit: true
    actions:
        settings:
            label:
                normal: Edit contents
                locked: >
                    View contents (this content item is checked out by another
                    Administrator and cannot be edited)
                cant_make_draft: View contents
                trashed: View content (to edit, click Re-draft)
                hidden: View content (to edit, click Unhide)
                settings: ~Plugin~ properties
                view_settings: View ~plugin~ properties
            onclick: return zenarioA.pluginSlotEditSettings(this, slotName);
        
        copy_contents:
            hidden: true
            css_class: zenario_slotControl_cutCopyPaste
            label: Copy contents
            page_modes:
                edit: true
            onclick: >
                zenarioA.copyContents(this, slotName, 'list,of,allowed,modules');
                return false;
        cut_contents:
            hidden: true
            css_class: zenario_slotControl_cutCopyPaste
            label: Cut contents
            page_modes:
                edit: true
            onclick: >
                if (zenarioA.draft(this.id)) {
                    zenarioA.cutContents(this, slotName, 'list,of,allowed,modules');
                }
                return false;
        paste_contents:
            hidden: true
            css_class: zenario_slotControl_cutCopyPaste
            label: Paste contents
            page_modes:
                edit: true
            onclick: >
                if (zenarioA.draft(this.id)) {
                    zenarioA.pasteContents(this, slotName);
                }
                return false;
        overwrite_contents:
            hidden: true
            css_class: zenario_slotControl_cutCopyPaste
            label: Paste and overwrite contents
            page_modes:
                edit: true
            onclick: >
                if (zenarioA.draft(this.id)) {
                    zenarioA.overwriteContents(this, slotName);
                }
                return false;
        swap_contents:
            hidden: true
            css_class: zenario_slotControl_cutCopyPaste
            label: Swap contents
            page_modes:
                edit: true
            onclick: >
                if (zenarioA.draft(this.id)) {
                    zenarioA.swapContents(this, slotName);
                }
                return false;
        
        framework_and_css:
            label: 'Framework & CSS'
            onclick: return zenarioA.pluginSlotEditSettings(this, slotName, 'plugin_css_and_framework');
        
        move_on_item_layer:
            page_modes:
                edit: true
            onclick: |
                if (zenarioA.draft(this.id)) {
                    zenarioA.movePlugin(this, slotName);
                }
                return false;
            label: Move ~plugin~
        move_on_layout_layer:
            page_modes:
                layout: true
            onclick: return zenarioA.movePlugin(this, slotName);
            label: Move ~plugin~
        convert_nest:
            onclick: |
                zenarioAB.open(
                    'zenario_plugin_nest__convert_between',
                    {
                        id: instanceId,
                        cID: zenario.cID,
                        cType: zenario.cType,
                        cVersion: zenario.cVersion,
                        slotName: slotName
                    }
                );
                return false;
            label: Convert nest type...
        
        
        replace_reusable_on_item_layer:
            ord: 85
            priv: _PRIV_MANAGE_ITEM_SLOT
            label: Show a different plugin on this content item...
            page_modes:
                edit: true
                layout: true
            onclick: |
                if (zenarioA.draft(this.id)) {
                    zenarioAT.clickTab('edit');
                    zenarioA.pickNewPlugin(this, slotName, 1);
                }
                return false;
        
        hide_plugin:
            ord: 86
            page_modes:
                edit: true
                layout: true
            onclick: >
                if (zenarioA.draft(this.id, false, 'Are you sure you wish to hide this ~plugin~ on this content item?', 'Hide')) {
                    zenarioA.hidePlugin(this, slotName);
                }
                return false;
            label: Hide ~plugin~ on this content item
        
        insert_reusable_on_layout_layer:
            ord: 87
            priv: _PRIV_MANAGE_TEMPLATE_SLOT
            label: Show a different plugin on this layout...
            page_modes:
                layout: true
            onclick: return zenarioA.pickNewPlugin(this, slotName, 2);
        
        remove_from_item_layer:
            ord: 90
            page_modes:
                edit: true
            onclick: >
                if (zenarioA.draft(this.id, false, 'Are you sure you wish to remove this ~plugin~?', 'Remove')) {
                    zenarioA.removePlugin(this, slotName, 1);
                }
                return false;
            label: Remove ~plugin~
        remove_from_layout_layer:
            ord: 92
            page_modes:
                layout: true
            onclick: return zenarioA.removePlugin(this, slotName, 2);
            label: Remove ~plugin~ from layout
    
    
    
    overridden_info:
        desc:
            css_class: zenario_slotControl_Overridden
            label: 'On layout (overridden):'
            page_modes:
                edit: true
                layout: true
        module_name:
            css_class: '' #zenario_slotControl_wireframe or zenario_slotControl_reusable
            page_modes:
                edit: true
                layout: true
        reusable_plugin_details:
            css_class: zenario_slotControl_reusablePluginDetails
            page_modes:
                edit: true
                layout: true
    overridden_actions:
        #show_plugin:
        #    ord: 89
        #    page_modes:
        #        edit: true
        #        layout: true
        #    onclick: >
        #        if (zenarioA.draft(this.id)) {
        #            zenarioA.showPlugin(this, slotName);
        #        }
        #        return false;
        #    label: Show plugin on this content item
        remove_from_layout_layer:
            ord: 92
            page_modes:
                edit: true
                layout: true
            onclick: return zenarioA.removePlugin(this, slotName, 2);
            label: Remove ~plugin~ from layout
